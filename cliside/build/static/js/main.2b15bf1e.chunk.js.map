{"version":3,"sources":["usercontext/usercontext.js","Dashboard/dashboard.js","Login/login.js","register/register.js","App.js","index.js"],"names":["UdContext","createContext","Dashboard","props","urdata","useContext","redirect","push","to","JSON","stringify","user","Login","useState","un","pass","remember_me","logindetails","setdetails","setredirect","setUser","handleChange","event","target","name","value","console","log","a","Axios","post","userdata","data","prelog","onloadlogin","class","for","type","id","placeholder","onChange","onClick","href","validateEmail","email","test","Register","state","firstname","surname","username","password","phonenumber","emailmess","emailval","usernamemess","usernamevall","updstate","bind","regiproc","credtaken","path","err","datas","axd","taken","out","axdata","this","setState","emailtaken","validemail","forceUpdate","usernametaken","fnm","surn","usrnm","pnum","streg","required","autoComplete","maxLength","React","Component","Home","App","className","Provider","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b15bf1e.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst  UdContext = createContext(null) // stores userdata\n\nexport default UdContext","import React, { useContext } from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport UdContext from '../usercontext/usercontext';\n\nfunction Dashboard (props){\n    const {urdata} = useContext(UdContext) // use this to set user data and pull userdata\n   \n    if (urdata.redirect === false){ // if not authenticated \n\n        return(\n            <Redirect push to = '/login' />\n        )\n\n    }else if (urdata.redirect=== true){ // if there is a redirect allowance \n        return(\n                <p>{JSON.stringify(urdata.user)}</p>\n            )\n\n    }\n    \n\n}\n \n\n\nexport default Dashboard","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Axios from 'axios'\nimport './login.css'\nimport '../general_css/gcss.css'\nimport Footer from '../general_css/footer';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect\n  } from \"react-router-dom\";\nimport Dashboard from '../Dashboard/dashboard';\nimport UdContext from '../usercontext/usercontext';\nimport { createContext, useContext } from \"react\";\n\nfunction Login (){\n    const [logindetails,setdetails] = useState({un:'',pass:'',remember_me:true}) //function component equivalent of this.state  // used to get login details\n    const [redirect ,setredirect ] = useState({redirect:false}) // redirect state // allow redirect to dashboard?\n    const {urdata ,setUser} = useContext(UdContext) // use this to set userdata to use any where\n\n    function handleChange (event){\n        setdetails({...logindetails ,[event.target.name]: event.target.value}) // changes \n        console.log(logindetails)\n        console.log('somewhat works')\n    }\n\n    async function loginproce(){\n        const userdata = await Axios.post('/login',logindetails)\n        if (userdata.data.redirect === true){\n            setredirect({redirect:userdata.data.redirect});\n            setUser({user:userdata.data.user,redirect:userdata.data.redirect}) // sets context to userdata from the redirect\n        }\n    }\n    async function onloadlogin (){\n        const prelog = await Axios.post('/login',logindetails)\n        if (prelog.data.redirect === true){\n            setredirect({redirect:prelog.data.redirect});\n            setUser({user:prelog.data.user,redirect:prelog.data.redirect}) // sets context to userdata from the redirect\n        }\n\n    }\n    onloadlogin()\n    if (redirect.redirect === true) {\n        return(<Redirect push to = '/dashboard' />)\n    }else{\n        return(\n            <div class = 'logbackground'>\n                <div class = 'maincontainer'>\n                    <div class ='Form_schem'>\n                        <span>\n                            <label for='Username'>Username</label>\n                            <input value = {logindetails.un} type='text' name = 'un' id = 'Username'placeholder = 'Username'  onChange={handleChange}/>\n                        </span>\n                        <span>\n                            <label for= 'Password'>Password</label>\n                            <input value = {logindetails.pass} name = 'pass' id = 'Password'placeholder = 'Password' type = 'password' onChange={handleChange}/>\n                        </span>\n                        <span>\n                            <span class = 'rme'>\n                                <label for='remeber_me'>Remember me ? </label>\n                                <input value = {logindetails.remember_me}name = 'remember_me'id='remember_me'type='checkbox' onChange={handleChange}/>\n                            </span>\n                        </span>\n                        <span>\n                            <button id = 'login_button'onClick = {loginproce}>Login</button>\n                        </span>\n                        <span class = 'fn'>\n                            <span><a href='/login'>Forgotten Your Password?</a></span>\n                            <span class = 'regilink'>Need An account? <a href ='/register'>Register</a></span>\n                        </span>\n                    </div>\n                </div> \n                \n            </div>\n        )\n    }\n    \n}\n\n\n\n\n\n\n\n\nexport default Login","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../general_css/gcss.css'\nimport './register.css'\nimport footer from '../general_css/footer';\nimport Axios from 'axios'\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            firstname:'',\n            surname:'',\n            username:' ',\n            password:'',\n            email:' ',\n            phonenumber:''\n        }\n        this.emailmess=''\n        this.emailval = null // is email valid\n        this.usernamemess = ''\n        this.usernamevall = null // is username valid \n        this.handleChange = this.updstate.bind(this);\n        this.regiproc = this.regiproc.bind(this)\n        this.credtaken = this.credtaken.bind(this)\n\n    }\n\n    async credtaken(path , data){\n        if (path === 'email' ){\n            const axd = await Axios.post('/takencred' , {email:data} , (err,datas)=>{return datas})\n            //console.log(axd)\n            if (axd.data.taken === false ){ // if theres no match in the database \n                return {out:false}\n            }else if (axd.data.taken === true ){ // if there is a match in the data base\n                return {out:true}\n            }\n    \n        }else if (path === 'username'){ // for username side \n            const axdata = await Axios.post('/takencred' , {username:data} ,(err , datas)=>{return datas})\n\n            //console.log(axdata)\n\n            if (axdata.data.taken === false ){ // if username aint taken \n\n                this.usernamevall = true // is username valid -true === yes\n                return {out:false}\n\n                \n            }else if (axdata.data.taken === true ){ // if user name is taken\n\n                this.usernamevall = false //username is not valid\n                return {out:true}\n\n            }\n        }\n    \n    }\n\n\n    \n    async updstate(event){\n        this.setState({[event.target.name]:event.target.value}) // change the variable name of whoever called this event event.target gets everything of the thing that calls the event \n\n        if (event.target.name === 'email'){ // email validation \n            const emailtaken  = await this.credtaken('email',this.state.email)\n            //console.log(emailtaken)\n\n            if (emailtaken.out === false ){ // if the email is not taken \n\n                const validemail = validateEmail(this.state.email)\n                //console.log(this.emailmess) // valid email checker \n                this.emailmess=null; // remvoe email message\n                this.forceUpdate()\n\n                if (validemail === false){\n\n                    this.emailmess='Email is invalid';\n                    this.emailval = false\n                    this.forceUpdate()\n\n                }else if (validemail === true){\n\n                    this.emailmess='Email is valid';\n                    this.emailval = true\n                    this.forceUpdate()\n\n                }else{\n                    this.emailmess=null;\n                    this.forceUpdate()\n                }\n\n            }else if (emailtaken.out === true){ // if email is taken\n                this.emailmess='Email taken';\n                this.forceUpdate()\n\n            }\n\n        }\n\n\n        if (event.target.name === 'username'){\n            const usernametaken = await this.credtaken('username',this.state.username)\n            //console.log(this.usernamemess)\n            //console.log(usernametaken)\n\n            if (usernametaken.out === true){ // show username is taken\n\n                this.usernamemess = 'Username is taken' \n                this.forceUpdate()\n\n            }else if (usernametaken.out === false){ // show username is not taken\n\n                this.usernamemess = 'Username is valid'\n                this.forceUpdate() \n\n            }\n        }\n    };\n\n    async regiproc(event){\n        //console.log('calling regipro')\n        if (this.emailval === true && this.usernamevall === true){\n            const streg = await Axios.post('/register' ,{fnm:this.state.firstname,surn:this.state.surname,email:this.state.email ,usrnm:this.state.username,password:this.state.password,pnum:this.state.phonenumber},(err , datas)=>{return datas})\n            console.log(streg.data)\n\n        }\n    };\n    render(){\n        return(\n            <div class='logbackground'>\n                <div class='maincontainer'> \n                    <div class = 'Form_schem'>\n                        \n                        <span><h1>Create an account</h1></span>\n                        <span>\n                            <label for='first_name'>Firstname</label>\n                            <input id ='first_name' placeholder='Forename' type='text' value = {this.state.firstname} onChange = { this.handleChange} name = 'firstname' required/>\n                        </span>\n                        <span>\n                            <label for='sur_name'>Surname</label>\n                            <input id ='sur_name' placeholder='Surname'type='text' value = {this.state.surname} onChange = { this.handleChange} name = 'surname' required/>\n                        </span>\n                        <span>\n                            <label for='Username'>Username</label>\n                            <input id = 'Username' value = {this.state.username} type='text' placeholder = 'Username' onChange = {this.handleChange} name = 'username' required/>\n                            <p1>{this.usernamemess}</p1>\n                        </span>\n                        <span> \n                            <label for='Password'>Password</label>\n                            <input id = 'Password' type='password' value = {this.state.password}  placeholder = 'Password' onChange = { this.handleChange} name = 'password' required/>\n                        </span>\n                        <span>\n                            <label for='email'>Email</label>\n                            <input id ='email' type = 'email' placeholder='Email' autoComplete='email'  value = {this.state.email} onChange = {this.handleChange} name ='email' maxLength = '320' required/>\n                            <p1 id='emailmess'>{this.emailmess}</p1>\n                        </span>\n                        <span>\n                            <label for='phonenumber'>Phonenumber</label>\n                            <input id ='phonenumber' placeholder='Phonenumber'type='text' value = {this.state.phonenumber} onChange = {this.handleChange} name = 'phonenumber'/>\n                        </span>\n            \n                        <span>\n                            <button type='submit' onClick={this.regiproc}>Register</button>    \n                        </span>\n                        <span id = 'tctxt'>\n                            <p1>By clicking Register you are agreeing to the <a href= '#'>Terms and Conditions</a></p1>\n                        </span>\n                        <span class = 'logbtn'>\n                            <span>Already have an account?<a href='/login'>Login</a></span>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n\n}\n\n\nfunction validateEmail(email) { // email validation process\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n\n\nexport default Register","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport axios from 'axios';\nimport './App.css';\nimport Login from './Login/login.js'; // goes to the login page \nimport Register from \"./register/register.js\" \nimport Dashboard from \"./Dashboard/dashboard.js\";\nimport Footer from \"./general_css/footer\";\nimport UdContext from './usercontext/usercontext.js'\nimport { useContext, useState } from \"react\";\n\n\n\n\nfunction App() {\n  const [urdata,setUser] = useState({user:null , redirect:false}) // default user info // urdata and setuser from use state are the parametersthat u can use in these routes\n\n  return (\n    <div className=\"App\">\n      <Router>  \n        <Switch>\n\n          <UdContext.Provider value = {{urdata,setUser}}>     \n\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/register\">\n              <Register />\n            </Route>\n            <Route exact path ='/dashboard' component = {Dashboard}/>\n\n          </UdContext.Provider>\n\n          </Switch>\n      </Router>\n    </div>\n  );\n}\n\n\n\nfunction Home (){\n  return (\n    <h1>welcome</h1>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}