[{"/Users/mugki/Desktop/sltim/cliside/src/index.js":"1","/Users/mugki/Desktop/sltim/cliside/src/App.js":"2","/Users/mugki/Desktop/sltim/cliside/src/Login/login.js":"3","/Users/mugki/Desktop/sltim/cliside/src/register/register.js":"4","/Users/mugki/Desktop/sltim/cliside/src/general_css/footer.js":"5","/Users/mugki/Desktop/sltim/cliside/src/Dashboard/dashboard.js":"6","/Users/mugki/Desktop/sltim/cliside/src/usercontext/usercontext.js":"7"},{"size":223,"mtime":1627582464100,"results":"8","hashOfConfig":"9"},{"size":1241,"mtime":1629292628162,"results":"10","hashOfConfig":"9"},{"size":3320,"mtime":1629407628779,"results":"11","hashOfConfig":"9"},{"size":7666,"mtime":1629291802319,"results":"12","hashOfConfig":"9"},{"size":105,"mtime":1628021389695,"results":"13","hashOfConfig":"9"},{"size":791,"mtime":1629291727755,"results":"14","hashOfConfig":"9"},{"size":123,"mtime":1628477060712,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cvzz7k",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/mugki/Desktop/sltim/cliside/src/index.js",[],["33","34"],"/Users/mugki/Desktop/sltim/cliside/src/App.js",["35","36"],"/Users/mugki/Desktop/sltim/cliside/src/Login/login.js",["37","38","39","40","41","42"],"/Users/mugki/Desktop/sltim/cliside/src/register/register.js",["43","44","45","46","47","48"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../general_css/gcss.css'\nimport './register.css'\nimport Axios from 'axios'\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            firstname:'',\n            surname:'',\n            username:'@',\n            password:'',\n            email:'',\n            phonenumber:''\n        }\n        this.emailmess=''\n        this.emailval = null // is email valid\n        this.usernamemess = ''\n        this.usernamevall = null // is username valid \n        this.handleChange = this.updstate.bind(this);\n        this.regiproc = this.regiproc.bind(this)\n        this.credtaken = this.credtaken.bind(this)\n        document.title = 'Register'\n    }\n    \n    async credtaken(path , data){\n        if (path === 'email' ){\n            try {\n                const axd = await Axios.post('/takencred' , {email:data})\n                console.log(axd)\n                if (axd.data.taken === false ){ // if theres no match in the database i.e username is not taken \n                    return {out:false}\n                }else if (axd.data.taken === true ){ // if there is a match in the data base ie data is taken \n                    return {out:true}\n                }  \n\n            } catch (error) {\n                \n            }\n            \n    \n        }else if (path === 'username'){ // for username side \n\n            try {\n                const axdata = await Axios.post('/takencred' , {username:data})\n\n                console.log(axdata)\n\n                if (axdata.data.taken === false ){ // if username aint taken \n\n                    this.usernamevall = true // is username valid -true === yes\n                    return {out:false}\n\n                    \n                }else if (axdata.data.taken === true ){ // if user name is taken\n\n                    this.usernamevall = false //username is not valid\n                    return {out:true}\n\n                }   \n            } catch (error) {\n                \n            }\n            \n        }\n    \n    }\n\n\n    \n    async updstate(event){\n        this.setState({[event.target.name]:event.target.value}) // change the variable name of whoever called this event event.target gets everything of the thing that calls the event \n\n        if (event.target.name === 'email'){ // email validation \n            const emailtaken  = await this.credtaken('email',this.state.email)\n            //console.log(emailtaken)\n\n            if (emailtaken.out === false ){ // if the email is not taken \n\n                const validemail = validateEmail(this.state.email)\n                //console.log(this.emailmess) // valid email checker \n                this.emailmess=null; // remvoe email message\n                this.forceUpdate()\n\n                if (validemail === false){\n\n                    this.emailmess='Email is invalid';\n                    this.emailval = false\n                    this.forceUpdate()\n\n                }else if (validemail === true){\n\n                    this.emailmess='Email is valid';\n                    this.emailval = true\n                    this.forceUpdate()\n\n                }else{\n                    this.emailmess=null;\n                    this.forceUpdate()\n                }\n\n            }else if (emailtaken.out === true){ // if email is taken\n                this.emailmess='Email taken';\n                this.forceUpdate()\n\n            }\n\n        }\n\n\n        if (event.target.name === 'username'){\n            const usernametaken = await this.credtaken('username',this.state.username)\n            //console.log(this.usernamemess)\n            //console.log(usernametaken)\n\n            if (usernametaken.out === true){ // show username is taken\n\n                this.usernamemess = 'Username is taken' \n                this.forceUpdate()\n\n            }else if (usernametaken.out === false){ // show username is not taken\n\n                this.usernamemess = 'Username is valid'\n                this.forceUpdate() \n\n            }\n        }\n    };\n\n    async regiproc(event){\n        //console.log('calling regipro')\n        if (this.emailval === true && this.usernamevall === true){\n            const streg = await Axios.post('/register' ,{fnm:this.state.firstname,surn:this.state.surname,email:this.state.email ,usrnm:this.state.username,password:this.state.password,pnum:this.state.phonenumber},(err , datas)=>{return datas})\n            console.log(streg.data)\n\n        }\n    };\n    render(){\n        return(\n            <div class='logbackground'>\n                <div class='maincontainer'> \n                    <div class = 'Form_schem'>\n                        \n                        <span><h1>Create an account</h1></span>\n                        <span>\n                            <label for='first_name'>Firstname</label>\n                            <input id ='first_name' placeholder='Forename' type='text' value = {this.state.firstname} onChange = { this.handleChange} name = 'firstname' required/>\n                        </span>\n                        <span>\n                            <label for='sur_name'>Surname</label>\n                            <input id ='sur_name' placeholder='Surname'type='text' value = {this.state.surname} onChange = { this.handleChange} name = 'surname' required/>\n                        </span>\n                        <span>\n                            <label for='Username'>Username</label>\n                            <input id = 'Username' value = {this.state.username} type='text' placeholder = 'Username' onChange = {this.handleChange} name = 'username' required/>\n                            <p1>{this.usernamemess}</p1>\n                        </span>\n                        <span> \n                            <label for='Password'>Password</label>\n                            <input id = 'Password' type='password' value = {this.state.password}  placeholder = 'Password' onChange = { this.handleChange} name = 'password' required/>\n                        </span>\n                        <span>\n                            <label for='email'>Email</label>\n                            <input id ='email' type = 'email' placeholder='Email' autoComplete='email'  value = {this.state.email} onChange = {this.handleChange} name ='email' maxLength = '320' required/>\n                            <p1 id='emailmess'>{this.emailmess}</p1>\n                        </span>\n                        <span>\n                            <label for='phonenumber'>Phonenumber</label>\n                            <input id ='phonenumber' placeholder='Phonenumber'type='text' value = {this.state.phonenumber} onChange = {this.handleChange} name = 'phonenumber'/>\n                        </span>\n            \n                        <span>\n                            <button type='submit' onClick={this.regiproc}>Register</button>    \n                        </span>\n                        <span id = 'tctxt'>\n                            <p1>By clicking Register you are agreeing to the <a href= '#'>Terms and Conditions</a></p1>\n                        </span>\n                        <span class = 'logbtn'>\n                            <span>Already have an account?<a href='/login'>Login</a></span>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n\n}\n\n\nfunction validateEmail(email) { // email validation process\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n\n\nexport default Register","/Users/mugki/Desktop/sltim/cliside/src/general_css/footer.js",[],["49","50"],"/Users/mugki/Desktop/sltim/cliside/src/Dashboard/dashboard.js",["51","52","53"],"/Users/mugki/Desktop/sltim/cliside/src/usercontext/usercontext.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":13},{"ruleId":"58","severity":1,"message":"62","line":12,"column":10,"nodeType":"60","messageId":"61","endLine":12,"endColumn":20},{"ruleId":"58","severity":1,"message":"63","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":16},{"ruleId":"58","severity":1,"message":"64","line":7,"column":22,"nodeType":"60","messageId":"61","endLine":7,"endColumn":28},{"ruleId":"58","severity":1,"message":"65","line":11,"column":10,"nodeType":"60","messageId":"61","endLine":11,"endColumn":23},{"ruleId":"58","severity":1,"message":"66","line":16,"column":12,"nodeType":"60","messageId":"61","endLine":16,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":32,"column":13,"nodeType":"69","messageId":"70","endLine":32,"endColumn":46},{"ruleId":"67","severity":1,"message":"68","line":44,"column":13,"nodeType":"69","messageId":"70","endLine":44,"endColumn":50},{"ruleId":"58","severity":1,"message":"63","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":178,"column":78,"nodeType":"73","endLine":178,"endColumn":91},{"ruleId":"74","severity":1,"message":"75","line":195,"column":36,"nodeType":"76","messageId":"77","endLine":195,"endColumn":37,"suggestions":"78"},{"ruleId":"74","severity":1,"message":"75","line":195,"column":61,"nodeType":"76","messageId":"77","endLine":195,"endColumn":62,"suggestions":"79"},{"ruleId":"74","severity":1,"message":"75","line":195,"column":70,"nodeType":"76","messageId":"77","endLine":195,"endColumn":71,"suggestions":"80"},{"ruleId":"74","severity":1,"message":"75","line":195,"column":74,"nodeType":"76","messageId":"77","endLine":195,"endColumn":75,"suggestions":"81"},{"ruleId":"54","replacedBy":"82"},{"ruleId":"56","replacedBy":"83"},{"ruleId":"58","severity":1,"message":"63","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":16},{"ruleId":"58","severity":1,"message":"84","line":2,"column":20,"nodeType":"60","messageId":"61","endLine":2,"endColumn":26},{"ruleId":"58","severity":1,"message":"64","line":4,"column":22,"nodeType":"60","messageId":"61","endLine":4,"endColumn":28},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","'createContext' is defined but never used.","'urdata' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["87","88"],["89","90"],["91","92"],["93","94"],["85"],["86"],"'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"95","fix":"96","desc":"97"},{"messageId":"98","fix":"99","desc":"100"},{"messageId":"95","fix":"101","desc":"97"},{"messageId":"98","fix":"102","desc":"100"},{"messageId":"95","fix":"103","desc":"97"},{"messageId":"98","fix":"104","desc":"100"},{"messageId":"95","fix":"105","desc":"97"},{"messageId":"98","fix":"106","desc":"100"},"removeEscape",{"range":"107","text":"108"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"109","text":"110"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"111","text":"108"},{"range":"112","text":"110"},{"range":"113","text":"108"},{"range":"114","text":"110"},{"range":"115","text":"108"},{"range":"116","text":"110"},[7476,7477],"",[7476,7476],"\\",[7501,7502],[7501,7501],[7510,7511],[7510,7510],[7514,7515],[7514,7514]]