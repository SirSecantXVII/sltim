{"ast":null,"code":"var _jsxFileName = \"/Users/mugki/Desktop/sltim/cliside/src/register/register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../general_css/gcss.css';\nimport './register.css';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validateEmail(email) {\n  // email validation process\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n\nfunction Register() {\n  _s();\n\n  const [regidetails, setrd] = useState({\n    firstname: '',\n    surname: '',\n    username: '@',\n    password: '',\n    email: '',\n    phonenumber: ''\n  });\n  const [messval, setmessvall] = useState({\n    emailmess: '',\n    emailval: null,\n    // is email valid\n    usernamemess: '',\n    usernamevall: null // is username valid \n\n  });\n  document.title = 'Register';\n\n  async function credtaken(path, data) {\n    // check if user credentials are already taken \n    let usrct;\n\n    if (path === 'email') {\n      try {\n        console.log('requesting ');\n\n        if (typeof usrct != typeof undefined) {\n          usrct.cancel('Canceling previous request ');\n          return {\n            out: false\n          };\n        }\n\n        usrct = Axios.CancelToken.source();\n        console.log(usrct.token);\n        const axd = await Axios.post('/takencred', {\n          email: data\n        }, {\n          cancelToken: usrct.token\n        }); //console.log('axd bellow')\n\n        console.log(axd);\n\n        if (axd.data.taken === false) {\n          // if theres no match in the database i.e username is not taken \n          return {\n            out: false\n          };\n        } else if (axd.data.taken === true) {\n          // if there is a match in the data base ie data is taken \n          return {\n            out: true\n          };\n        } else {}\n      } catch (err) {\n        if (Axios.isCancel(err)) {\n          console.log('request deaded');\n          return {\n            out: false\n          };\n        }\n\n        return {\n          out: false\n        };\n      }\n    } else if (path === 'username') {\n      // for username side \n      try {\n        const axdata = await Axios.post('/takencred', {\n          username: data\n        }); // cancel source token for performance optimisaztion\n        //console.log(axdata)\n\n        if (axdata.data.taken === false) {\n          // if username aint taken \n          setmessvall({ ...messval,\n            usernamevall: true\n          }); //this.usernamevall = true // is username valid -true === yes\n\n          return {\n            out: false\n          };\n        } else if (axdata.data.taken === true) {\n          // if user name is taken\n          //this.usernamevall = false //username is not valid\n          setmessvall({ ...messval,\n            usernamevall: false\n          });\n          return {\n            out: true\n          };\n        }\n      } catch (error) {}\n    }\n  } //setdetails({...logindetails ,[event.target.name]: event.target.value})\n\n\n  async function handleChange(event) {\n    setrd({ ...regidetails,\n      [event.target.name]: event.target.value\n    }); // change the variable name of whoever called this event event.target gets everything of the thing that calls the event \n\n    console.log(regidetails);\n\n    if (event.target.name === 'email') {\n      // email validation \n      const emailtaken = await credtaken('email', regidetails.email);\n      console.log('email taken ');\n      console.log(emailtaken);\n\n      if (emailtaken.out === false) {\n        // if the email is not taken \n        const validemail = validateEmail(regidetails.email); //console.log(this.emailmess) // valid email checker \n        //this.emailmess=null; // remvoe email message\n\n        setmessvall({ ...messval,\n          emailmess: null\n        });\n\n        if (validemail === false) {\n          //this.emailmess='Email is invalid';\n          //this.emailval = false\n          //this.forceUpdate()\n          setmessvall({ ...messval,\n            emailmess: 'Email is invalid',\n            emailval: false\n          });\n        } else if (validemail === true) {\n          // this.emailmess='Email is valid';\n          //this.emailval = true\n          //this.forceUpdate()\n          setmessvall({ ...messval,\n            emailmess: 'Email is valid',\n            emailval: true\n          });\n        } else {\n          //this.emailmess=null;\n          //this.forceUpdate()\n          setmessvall({ ...messval,\n            emailmess: null\n          });\n        }\n      } else if (emailtaken.out === true) {\n        // if email is taken\n        //this.emailmess='Email taken';\n        //this.forceUpdate()\n        setmessvall({ ...messval,\n          emailmess: 'Email is taken'\n        });\n      }\n    }\n\n    if (event.target.name === 'username') {\n      const usernametaken = await credtaken('username', regidetails.username); //console.log(this.usernamemess)\n\n      console.log('username');\n      console.log(usernametaken);\n\n      if (usernametaken.out === true) {\n        // show username is taken\n        //this.usernamemess = 'Username is taken' \n        //this.forceUpdate()\n        setmessvall({ ...messval,\n          usernamemess: 'Username is taken'\n        });\n      } else if (usernametaken.out === false) {\n        // show username is not taken\n        //this.usernamemess = 'Username is valid'\n        //this.forceUpdate() \n        setmessvall({ ...messval,\n          usernamemess: 'Username is valid'\n        });\n      }\n    }\n  }\n\n  ;\n\n  async function regiproc(event) {\n    //console.log('calling regipro')\n    if (this.emailval === true && this.usernamevall === true) {\n      const streg = await Axios.post('/register', {\n        fnm: regidetails.firstname,\n        surn: regidetails.surname,\n        email: regidetails.email,\n        usrnm: regidetails.username,\n        password: regidetails.password,\n        pnum: regidetails.phonenumber\n      }, (err, datas) => {\n        return datas;\n      });\n      console.log(streg.data);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"logbackground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"maincontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"Form_schem\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"first_name\",\n            children: \"Firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"first_name\",\n            placeholder: \"Forename\",\n            type: \"text\",\n            value: regidetails.firstname,\n            onChange: handleChange,\n            name: \"firstname\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"sur_name\",\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"sur_name\",\n            placeholder: \"Surname\",\n            type: \"text\",\n            value: regidetails.surname,\n            onChange: handleChange,\n            name: \"surname\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"Username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"Username\",\n            value: regidetails.username,\n            type: \"text\",\n            placeholder: \"Username\",\n            onChange: handleChange,\n            name: \"username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n            children: messval.usernamemess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"Password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"Password\",\n            type: \"password\",\n            value: regidetails.password,\n            placeholder: \"Password\",\n            onChange: handleChange,\n            name: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Email\",\n            autoComplete: \"email\",\n            value: regidetails.email,\n            onChange: handleChange,\n            name: \"email\",\n            maxLength: \"320\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n            id: \"emailmess\",\n            children: messval.emailmess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"phonenumber\",\n            children: \"Phonenumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"phonenumber\",\n            placeholder: \"Phonenumber\",\n            type: \"text\",\n            value: regidetails.phonenumber,\n            onChange: handleChange,\n            name: \"phonenumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: regiproc,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"tctxt\",\n          children: /*#__PURE__*/_jsxDEV(\"p1\", {\n            children: [\"By clicking Register you are agreeing to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Terms and Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 74\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"logbtn\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"5DGgwZlbA6Ta/Jzn+NTm5boBt7Y=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/mugki/Desktop/sltim/cliside/src/register/register.js"],"names":["React","useState","Axios","validateEmail","email","re","test","Register","regidetails","setrd","firstname","surname","username","password","phonenumber","messval","setmessvall","emailmess","emailval","usernamemess","usernamevall","document","title","credtaken","path","data","usrct","console","log","undefined","cancel","out","CancelToken","source","token","axd","post","cancelToken","taken","err","isCancel","axdata","error","handleChange","event","target","name","value","emailtaken","validemail","usernametaken","regiproc","streg","fnm","surn","usrnm","pnum","datas"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport '../general_css/gcss.css'\nimport './register.css'\nimport Axios from 'axios'\n\n\n\n\n\nfunction validateEmail(email) { // email validation process\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n\nfunction Register (){\n\n    const [regidetails,setrd] = useState({\n        firstname:'',\n        surname:'',\n        username:'@',\n        password:'',\n        email:'',\n        phonenumber:''\n    })\n\n    const [messval,setmessvall] = useState({\n        emailmess:'',\n        emailval :null,// is email valid\n        usernamemess :'',\n        usernamevall :null// is username valid \n    })\n\n    document.title = 'Register'\n\n    \n    async function credtaken(path , data){ // check if user credentials are already taken \n        let usrct;\n        if (path === 'email' ){\n            \n            try{\n                console.log('requesting ')\n\n                if(typeof usrct != typeof undefined){\n                    usrct.cancel('Canceling previous request ')\n                    return {out:false}\n                }\n\n                usrct = Axios.CancelToken.source()\n                console.log(usrct.token)\n                const axd = await Axios.post('/takencred' , {email:data},{cancelToken:usrct.token})\n\n                //console.log('axd bellow')\n                console.log(axd)\n\n                if (axd.data.taken === false ){ // if theres no match in the database i.e username is not taken \n                    return {out:false}\n\n                }else if (axd.data.taken === true ){ \n                    // if there is a match in the data base ie data is taken \n                    return {out:true}\n                }else{\n            \n                }\n            }catch(err){\n                if(Axios.isCancel(err)){\n                    console.log('request deaded')\n                    return{out:false}\n                }\n                return{out:false}\n            }\n        \n    \n        }else if (path === 'username'){ // for username side \n\n            try {\n                const axdata = await Axios.post('/takencred' , {username:data}) // cancel source token for performance optimisaztion\n                //console.log(axdata)\n                if (axdata.data.taken === false ){ // if username aint taken \n                    setmessvall({...messval,usernamevall:true})\n                    //this.usernamevall = true // is username valid -true === yes\n                    return {out:false}\n                    \n                }else if (axdata.data.taken === true ){ // if user name is taken\n\n                    //this.usernamevall = false //username is not valid\n                    setmessvall({...messval,usernamevall:false})\n                    return {out:true}\n\n                }   \n                \n            } catch (error) {\n                \n            }\n            \n            \n        }\n        \n    \n    }\n\n\n\n\n//setdetails({...logindetails ,[event.target.name]: event.target.value})\n    \n    async function handleChange (event){\n        setrd({...regidetails,[event.target.name]:event.target.value}) // change the variable name of whoever called this event event.target gets everything of the thing that calls the event \n        console.log(regidetails)\n\n        if (event.target.name === 'email'){ // email validation \n            const emailtaken  = await credtaken('email',regidetails.email)\n            console.log('email taken ')\n            console.log(emailtaken)\n\n            if (emailtaken.out === false ){ // if the email is not taken \n\n                const validemail = validateEmail(regidetails.email)\n                //console.log(this.emailmess) // valid email checker \n                //this.emailmess=null; // remvoe email message\n                setmessvall({...messval,emailmess:null})\n                \n\n                if (validemail === false){\n\n                    //this.emailmess='Email is invalid';\n                    //this.emailval = false\n                    //this.forceUpdate()\n                    setmessvall({...messval,emailmess:'Email is invalid',emailval:false})\n\n                }else if (validemail === true){\n\n                   // this.emailmess='Email is valid';\n                    //this.emailval = true\n                    //this.forceUpdate()\n                    setmessvall({...messval,emailmess:'Email is valid',emailval:true})\n                }else{\n                    //this.emailmess=null;\n                    //this.forceUpdate()\n                    setmessvall({...messval,emailmess:null})\n                }\n\n            }else if (emailtaken.out === true){ // if email is taken\n                //this.emailmess='Email taken';\n                //this.forceUpdate()\n\n                setmessvall({...messval,emailmess:'Email is taken'})\n\n            }\n\n        }\n\n\n        if (event.target.name === 'username'){\n            const usernametaken = await credtaken('username',regidetails.username)\n            //console.log(this.usernamemess)\n            console.log('username')\n            console.log(usernametaken)\n\n            if (usernametaken.out === true){ // show username is taken\n\n                //this.usernamemess = 'Username is taken' \n                //this.forceUpdate()\n\n                setmessvall({...messval,usernamemess:'Username is taken'})\n\n            }else if (usernametaken.out === false){ // show username is not taken\n\n                //this.usernamemess = 'Username is valid'\n                //this.forceUpdate() \n\n                setmessvall({...messval,usernamemess:'Username is valid'})\n\n            }\n        }\n    };\n\n    async function regiproc(event){\n        //console.log('calling regipro')\n        if (this.emailval === true && this.usernamevall === true){\n            const streg = await Axios.post('/register' ,{fnm:regidetails.firstname,surn:regidetails.surname,email:regidetails.email ,usrnm:regidetails.username,password:regidetails.password,pnum:regidetails.phonenumber},(err , datas)=>{return datas})\n            console.log(streg.data)\n\n        }\n    };\n\n    return(\n        <div class='logbackground'>\n            <div class='maincontainer'> \n                <div class = 'Form_schem'>\n                    \n                    <span><h1>Create an account</h1></span>\n                    <span>\n                        <label for='first_name'>Firstname</label>\n                        <input id ='first_name' placeholder='Forename' type='text' value = {regidetails.firstname} onChange = { handleChange} name = 'firstname' required/>\n                    </span>\n                    <span>\n                        <label for='sur_name'>Surname</label>\n                        <input id ='sur_name' placeholder='Surname'type='text' value = {regidetails.surname} onChange = { handleChange} name = 'surname' required/>\n                    </span>\n                    <span>\n                        <label for='Username'>Username</label>\n                        <input id = 'Username' value = {regidetails.username} type='text' placeholder = 'Username' onChange = {handleChange} name = 'username' required/>\n                        <p1>{messval.usernamemess}</p1>\n                    </span>\n                    <span> \n                        <label for='Password'>Password</label>\n                        <input id = 'Password' type='password' value = {regidetails.password}  placeholder = 'Password' onChange = { handleChange} name = 'password' required/>\n                    </span>\n                    <span>\n                        <label for='email'>Email</label>\n                        <input id ='email' type = 'email' placeholder='Email' autoComplete='email'  value = {regidetails.email} onChange = {handleChange} name ='email' maxLength = '320' required/>\n                        <p1 id='emailmess'>{messval.emailmess}</p1>\n                    </span>\n                    <span>\n                        <label for='phonenumber'>Phonenumber</label>\n                        <input id ='phonenumber' placeholder='Phonenumber'type='text' value = {regidetails.phonenumber} onChange = {handleChange} name = 'phonenumber'/>\n                    </span>\n        \n                    <span>\n                        <button type='submit' onClick={regiproc}>Register</button>    \n                    </span>\n                    <span id = 'tctxt'>\n                        <p1>By clicking Register you are agreeing to the <a href= '#'>Terms and Conditions</a></p1>\n                    </span>\n                    <span class = 'logbtn'>\n                        <span>Already have an account?<a href='/login'>Login</a></span>\n                    </span>\n                </div>\n            </div>\n        </div>\n\n\n    )\n\n\n}\nexport default Register"]},"metadata":{},"sourceType":"module"}