{"ast":null,"code":"var _jsxFileName = \"/Users/mugki/Desktop/sltim/cliside/src/register/register.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../general_css/gcss.css';\nimport './register.css';\nimport footer from '../general_css/footer';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstname: '',\n      surname: '',\n      username: '',\n      password: '',\n      email: '',\n      phonenumber: ''\n    };\n    this.emailmess = '';\n    this.emailval = null; // is email valid\n\n    this.usernamemess = '';\n    this.usernamevall = null; // is username valid \n\n    this.handleChange = this.updstate.bind(this);\n    this.regiproc = this.regiproc.bind(this);\n    this.credtaken = this.credtaken.bind(this);\n  }\n\n  async credtaken(path, data) {\n    if (path === 'email') {\n      const axd = await Axios.post('/takencred', {\n        email: data\n      }, (err, datas) => {\n        return datas;\n      }); //console.log(axd)\n\n      if (axd.data.taken === false) {\n        // if theres no match in the database \n        return {\n          out: false\n        };\n      } else if (axd.data.taken === true) {\n        // if there is a match in the data base\n        return {\n          out: true\n        };\n      }\n    } else if (path === 'username') {\n      // for username side \n      const axdata = await Axios.post('/takencred', {\n        username: data\n      }, (err, datas) => {\n        return datas;\n      }); //console.log(axdata)\n\n      if (axdata.data.taken === false) {\n        // if username aint taken \n        this.usernamevall = true; // is username valid -true === yes\n\n        return {\n          out: false\n        };\n      } else if (axdata.data.taken === true) {\n        // if user name is taken\n        this.usernamevall = false; //username is not valid\n\n        return {\n          out: true\n        };\n      }\n    }\n  }\n\n  async updstate(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    }); // change the variable name of whoever called this event event.target gets everything of the thing that calls the event \n\n    if (event.target.name === 'email') {\n      // email validation \n      const emailtaken = await this.credtaken('email', this.state.email); //console.log(emailtaken)\n\n      if (emailtaken.out === false) {\n        // if the email is not taken \n        const validemail = validateEmail(this.state.email); //console.log(this.emailmess) // valid email checker \n\n        this.emailmess = null; // remvoe email message\n\n        this.forceUpdate();\n\n        if (validemail === false) {\n          this.emailmess = 'Email is invalid';\n          this.emailval = false;\n          this.forceUpdate();\n        } else if (validemail === true) {\n          this.emailmess = 'Email is valid';\n          this.emailval = true;\n          this.forceUpdate();\n        } else {\n          this.emailmess = null;\n          this.forceUpdate();\n        }\n      } else if (emailtaken.out === true) {\n        // if email is taken\n        this.emailmess = 'Email taken';\n        this.forceUpdate();\n      }\n    }\n\n    if (event.target.name === 'username') {\n      const usernametaken = await this.credtaken('username', this.state.username); //console.log(this.usernamemess)\n      //console.log(usernametaken)\n\n      if (usernametaken.out === true) {\n        // show username is taken\n        this.usernamemess = 'Username is taken';\n        this.forceUpdate();\n      } else if (usernametaken.out === false) {\n        // show username is not taken\n        this.usernamemess = 'Username is valid';\n        this.forceUpdate();\n      }\n    }\n  }\n\n  async regiproc(event) {\n    console.log('calling regipro');\n\n    if (this.emailval === true && this.usernamevall === true) {\n      const streg = await Axios.post('/register', {\n        fnm: this.state.firstname,\n        surn: this.state.surname,\n        email: this.state.email,\n        username: this.state.username,\n        password: this.state.password\n      }, (err, datas) => {\n        return datas;\n      });\n      console.log(streg.data);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"logbackground\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"maincontainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"Form_schem\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Create an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"first_name\",\n              children: \"Firstname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"first_name\",\n              placeholder: \"Forename\",\n              type: \"text\",\n              value: this.state.firstname,\n              onChange: this.handleChange,\n              name: \"firstname\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"sur_name\",\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"sur_name\",\n              placeholder: \"Surname\",\n              type: \"text\",\n              value: this.state.surname,\n              onChange: this.handleChange,\n              name: \"surname\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"Username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"Username\",\n              value: this.state.username,\n              type: \"text\",\n              placeholder: \"Username\",\n              onChange: this.handleChange,\n              name: \"username\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n              children: this.usernamemess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"Password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"Password\",\n              type: \"password\",\n              value: this.state.password,\n              placeholder: \"Password\",\n              onChange: this.handleChange,\n              name: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"email\",\n              type: \"email\",\n              placeholder: \"Email\",\n              autoComplete: \"email\",\n              value: this.state.email,\n              onChange: this.handleChange,\n              name: \"email\",\n              maxLength: \"320\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n              id: \"emailmess\",\n              children: this.emailmess\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"phonenumber\",\n              children: \"Phonenumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"phonenumber\",\n              placeholder: \"Phonenumber\",\n              type: \"text\",\n              value: this.state.phonenumber,\n              onChange: this.handleChange,\n              name: \"phonenumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: this.regiproc,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"tctxt\",\n            children: /*#__PURE__*/_jsxDEV(\"p1\", {\n              children: [\"By clicking Register you are agreeing to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                children: \"Terms and Conditions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 78\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"logbtn\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction validateEmail(email) {\n  // email validation process\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/mugki/Desktop/sltim/cliside/src/register/register.js"],"names":["React","ReactDOM","footer","Axios","Register","Component","constructor","props","state","firstname","surname","username","password","email","phonenumber","emailmess","emailval","usernamemess","usernamevall","handleChange","updstate","bind","regiproc","credtaken","path","data","axd","post","err","datas","taken","out","axdata","event","setState","target","name","value","emailtaken","validemail","validateEmail","forceUpdate","usernametaken","console","log","streg","fnm","surn","render","re","test"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../general_css/gcss.css'\nimport './register.css'\nimport footer from '../general_css/footer';\nimport Axios from 'axios'\n\nclass Register extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            firstname:'',\n            surname:'',\n            username:'',\n            password:'',\n            email:'',\n            phonenumber:''\n        }\n        this.emailmess=''\n        this.emailval = null // is email valid\n        this.usernamemess = ''\n        this.usernamevall = null // is username valid \n        this.handleChange = this.updstate.bind(this);\n        this.regiproc = this.regiproc.bind(this)\n        this.credtaken = this.credtaken.bind(this)\n\n    }\n\n    async credtaken(path , data){\n        if (path === 'email' ){\n            const axd = await Axios.post('/takencred' , {email:data} , (err,datas)=>{return datas})\n            //console.log(axd)\n            if (axd.data.taken === false ){ // if theres no match in the database \n                return {out:false}\n            }else if (axd.data.taken === true ){ // if there is a match in the data base\n                return {out:true}\n            }\n    \n        }else if (path === 'username'){ // for username side \n            const axdata = await Axios.post('/takencred' , {username:data} ,(err , datas)=>{return datas})\n\n            //console.log(axdata)\n\n            if (axdata.data.taken === false ){ // if username aint taken \n\n                this.usernamevall = true // is username valid -true === yes\n                return {out:false}\n\n                \n            }else if (axdata.data.taken === true ){ // if user name is taken\n\n                this.usernamevall = false //username is not valid\n                return {out:true}\n\n            }\n        }\n    \n    }\n\n\n    \n    async updstate(event){\n        this.setState({[event.target.name]:event.target.value}) // change the variable name of whoever called this event event.target gets everything of the thing that calls the event \n\n        if (event.target.name === 'email'){ // email validation \n            const emailtaken  = await this.credtaken('email',this.state.email)\n            //console.log(emailtaken)\n\n            if (emailtaken.out === false ){ // if the email is not taken \n\n                const validemail = validateEmail(this.state.email)\n                //console.log(this.emailmess) // valid email checker \n                this.emailmess=null; // remvoe email message\n                this.forceUpdate()\n\n                if (validemail === false){\n\n                    this.emailmess='Email is invalid';\n                    this.emailval = false\n                    this.forceUpdate()\n\n                }else if (validemail === true){\n\n                    this.emailmess='Email is valid';\n                    this.emailval = true\n                    this.forceUpdate()\n\n                }else{\n                    this.emailmess=null;\n                    this.forceUpdate()\n                }\n\n            }else if (emailtaken.out === true){ // if email is taken\n                this.emailmess='Email taken';\n                this.forceUpdate()\n\n            }\n\n        }\n\n\n        if (event.target.name === 'username'){\n            const usernametaken = await this.credtaken('username',this.state.username)\n            //console.log(this.usernamemess)\n            //console.log(usernametaken)\n\n            if (usernametaken.out === true){ // show username is taken\n\n                this.usernamemess = 'Username is taken' \n                this.forceUpdate()\n\n            }else if (usernametaken.out === false){ // show username is not taken\n\n                this.usernamemess = 'Username is valid'\n                this.forceUpdate() \n\n            }\n        }\n    };\n\n    async regiproc(event){\n        console.log('calling regipro')\n        if (this.emailval === true && this.usernamevall === true){\n            const streg = await Axios.post('/register' ,{fnm:this.state.firstname,surn:this.state.surname,email:this.state.email ,username:this.state.username,password:this.state.password},(err , datas)=>{return datas})\n            console.log(streg.data)\n\n        }\n    };\n    render(){\n        return(\n            <div class='logbackground'>\n                <div class='maincontainer'> \n                    <div class = 'Form_schem'>\n                        \n                        <span><h1>Create an account</h1></span>\n                        <span>\n                            <label for='first_name'>Firstname</label>\n                            <input id ='first_name' placeholder='Forename' type='text' value = {this.state.firstname} onChange = { this.handleChange} name = 'firstname' required/>\n                        </span>\n                        <span>\n                            <label for='sur_name'>Surname</label>\n                            <input id ='sur_name' placeholder='Surname'type='text' value = {this.state.surname} onChange = { this.handleChange} name = 'surname' required/>\n                        </span>\n                        <span>\n                            <label for='Username'>Username</label>\n                            <input id = 'Username' value = {this.state.username} type='text' placeholder = 'Username' onChange = {this.handleChange} name = 'username' required/>\n                            <p1>{this.usernamemess}</p1>\n                        </span>\n                        <span> \n                            <label for='Password'>Password</label>\n                            <input id = 'Password' type='password' value = {this.state.password}  placeholder = 'Password' onChange = { this.handleChange} name = 'password' required/>\n                        </span>\n                        <span>\n                            <label for='email'>Email</label>\n                            <input id ='email' type = 'email' placeholder='Email' autoComplete='email'  value = {this.state.email} onChange = {this.handleChange} name ='email' maxLength = '320' required/>\n                            <p1 id='emailmess'>{this.emailmess}</p1>\n                        </span>\n                        <span>\n                            <label for='phonenumber'>Phonenumber</label>\n                            <input id ='phonenumber' placeholder='Phonenumber'type='text' value = {this.state.phonenumber} onChange = {this.handleChange} name = 'phonenumber'/>\n                        </span>\n            \n                        <span>\n                            <button type='submit' onClick={this.regiproc}>Register</button>    \n                        </span>\n                        <span id = 'tctxt'>\n                            <p1>By clicking Register you are agreeing to the <a href= '#'>Terms and Conditions</a></p1>\n                        </span>\n                        <span class = 'logbtn'>\n                            <span>Already have an account?<a href='/login'>Login</a></span>\n                        </span>\n                    </div>\n                </div>\n            </div>\n\n\n        )\n    }\n\n}\n\n\nfunction validateEmail(email) { // email validation process\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n\n\nexport default Register"]},"metadata":{},"sourceType":"module"}