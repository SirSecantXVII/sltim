{"ast":null,"code":"var _jsxFileName = \"/Users/mugki/Desktop/sltim/cliside/src/register/register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../general_css/gcss.css';\nimport './register.css';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validateEmail(email) {\n  // email validation process\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n\nfunction Register() {\n  _s();\n\n  const [regidetails, setrd] = useState({\n    firstname: '',\n    surname: '',\n    username: '@',\n    password: '',\n    email: '',\n    phonenumber: ''\n  });\n  const [messval, setmessvall] = useState({\n    emailmess: '',\n    emailval: null,\n    // is email valid\n    usernamemess: '',\n    usernamevall: null // is username valid \n\n  });\n  document.title = 'Register';\n\n  async function credtaken(path, data) {\n    if (path === 'email') {\n      try {\n        const axd = await Axios.post('/takencred', {\n          email: data\n        });\n        console.log(axd);\n\n        if (axd.data.taken === false) {\n          // if theres no match in the database i.e username is not taken \n          return {\n            out: false\n          };\n        } else if (axd.data.taken === true) {\n          // if there is a match in the data base ie data is taken \n          return {\n            out: true\n          };\n        }\n      } catch (error) {}\n    } else if (path === 'username') {\n      // for username side \n      try {\n        const axdata = await Axios.post('/takencred', {\n          username: data\n        });\n        console.log(axdata);\n\n        if (axdata.data.taken === false) {\n          // if username aint taken \n          this.usernamevall = true; // is username valid -true === yes\n\n          return {\n            out: false\n          };\n        } else if (axdata.data.taken === true) {\n          // if user name is taken\n          this.usernamevall = false; //username is not valid\n\n          return {\n            out: true\n          };\n        }\n      } catch (error) {}\n    }\n  }\n\n  async function updstate(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    }); // change the variable name of whoever called this event event.target gets everything of the thing that calls the event \n\n    if (event.target.name === 'email') {\n      // email validation \n      const emailtaken = await this.credtaken('email', this.state.email); //console.log(emailtaken)\n\n      if (emailtaken.out === false) {\n        // if the email is not taken \n        const validemail = validateEmail(this.state.email); //console.log(this.emailmess) // valid email checker \n\n        this.emailmess = null; // remvoe email message\n\n        this.forceUpdate();\n\n        if (validemail === false) {\n          this.emailmess = 'Email is invalid';\n          this.emailval = false;\n          this.forceUpdate();\n        } else if (validemail === true) {\n          this.emailmess = 'Email is valid';\n          this.emailval = true;\n          this.forceUpdate();\n        } else {\n          this.emailmess = null;\n          this.forceUpdate();\n        }\n      } else if (emailtaken.out === true) {\n        // if email is taken\n        this.emailmess = 'Email taken';\n        this.forceUpdate();\n      }\n    }\n\n    if (event.target.name === 'username') {\n      const usernametaken = await this.credtaken('username', this.state.username); //console.log(this.usernamemess)\n      //console.log(usernametaken)\n\n      if (usernametaken.out === true) {\n        // show username is taken\n        this.usernamemess = 'Username is taken';\n        this.forceUpdate();\n      } else if (usernametaken.out === false) {\n        // show username is not taken\n        this.usernamemess = 'Username is valid';\n        this.forceUpdate();\n      }\n    }\n  }\n\n  ;\n\n  async function regiproc(event) {\n    //console.log('calling regipro')\n    if (this.emailval === true && this.usernamevall === true) {\n      const streg = await Axios.post('/register', {\n        fnm: this.state.firstname,\n        surn: this.state.surname,\n        email: this.state.email,\n        usrnm: this.state.username,\n        password: this.state.password,\n        pnum: this.state.phonenumber\n      }, (err, datas) => {\n        return datas;\n      });\n      console.log(streg.data);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"logbackground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"maincontainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"Form_schem\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"first_name\",\n            children: \"Firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"first_name\",\n            placeholder: \"Forename\",\n            type: \"text\",\n            value: this.state.firstname,\n            onChange: this.handleChange,\n            name: \"firstname\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"sur_name\",\n            children: \"Surname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"sur_name\",\n            placeholder: \"Surname\",\n            type: \"text\",\n            value: this.state.surname,\n            onChange: this.handleChange,\n            name: \"surname\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"Username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"Username\",\n            value: this.state.username,\n            type: \"text\",\n            placeholder: \"Username\",\n            onChange: this.handleChange,\n            name: \"username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n            children: this.usernamemess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"Password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"Password\",\n            type: \"password\",\n            value: this.state.password,\n            placeholder: \"Password\",\n            onChange: this.handleChange,\n            name: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Email\",\n            autoComplete: \"email\",\n            value: this.state.email,\n            onChange: this.handleChange,\n            name: \"email\",\n            maxLength: \"320\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p1\", {\n            id: \"emailmess\",\n            children: this.emailmess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"phonenumber\",\n            children: \"Phonenumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"phonenumber\",\n            placeholder: \"Phonenumber\",\n            type: \"text\",\n            value: this.state.phonenumber,\n            onChange: this.handleChange,\n            name: \"phonenumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: this.regiproc,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"tctxt\",\n          children: /*#__PURE__*/_jsxDEV(\"p1\", {\n            children: [\"By clicking Register you are agreeing to the \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"Terms and Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 74\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"logbtn\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"5DGgwZlbA6Ta/Jzn+NTm5boBt7Y=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/mugki/Desktop/sltim/cliside/src/register/register.js"],"names":["React","useState","ReactDOM","Axios","validateEmail","email","re","test","Register","regidetails","setrd","firstname","surname","username","password","phonenumber","messval","setmessvall","emailmess","emailval","usernamemess","usernamevall","document","title","credtaken","path","data","axd","post","console","log","taken","out","error","axdata","updstate","event","setState","target","name","value","emailtaken","state","validemail","forceUpdate","usernametaken","regiproc","streg","fnm","surn","usrnm","pnum","err","datas","handleChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../general_css/gcss.css'\nimport './register.css'\nimport Axios from 'axios'\n\n\n\nfunction validateEmail(email) { // email validation process\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n}\n\n\nfunction Register (){\n\n    const [regidetails,setrd] = useState({\n        firstname:'',\n        surname:'',\n        username:'@',\n        password:'',\n        email:'',\n        phonenumber:''\n    })\n\n    const [messval,setmessvall] = useState({\n        emailmess:'',\n        emailval :null,// is email valid\n        usernamemess :'',\n        usernamevall :null// is username valid \n    })\n\n    document.title = 'Register'\n\n    async function credtaken(path , data){\n\n        if (path === 'email' ){\n            try {\n                const axd = await Axios.post('/takencred' , {email:data})\n                console.log(axd)\n                if (axd.data.taken === false ){ // if theres no match in the database i.e username is not taken \n                    return {out:false}\n                }else if (axd.data.taken === true ){ // if there is a match in the data base ie data is taken \n                    return {out:true}\n                }  \n\n            } catch (error) {\n                \n            }\n            \n    \n        }else if (path === 'username'){ // for username side \n\n            try {\n                const axdata = await Axios.post('/takencred' , {username:data})\n\n                console.log(axdata)\n\n                if (axdata.data.taken === false ){ // if username aint taken \n\n                    this.usernamevall = true // is username valid -true === yes\n                    return {out:false}\n\n                    \n                }else if (axdata.data.taken === true ){ // if user name is taken\n\n                    this.usernamevall = false //username is not valid\n                    return {out:true}\n\n                }   \n            } catch (error) {\n                \n            }\n            \n        }\n    \n    }\n\n\n    \n    async function updstate(event){\n        this.setState({[event.target.name]:event.target.value}) // change the variable name of whoever called this event event.target gets everything of the thing that calls the event \n\n        if (event.target.name === 'email'){ // email validation \n            const emailtaken  = await this.credtaken('email',this.state.email)\n            //console.log(emailtaken)\n\n            if (emailtaken.out === false ){ // if the email is not taken \n\n                const validemail = validateEmail(this.state.email)\n                //console.log(this.emailmess) // valid email checker \n                this.emailmess=null; // remvoe email message\n                this.forceUpdate()\n\n                if (validemail === false){\n\n                    this.emailmess='Email is invalid';\n                    this.emailval = false\n                    this.forceUpdate()\n\n                }else if (validemail === true){\n\n                    this.emailmess='Email is valid';\n                    this.emailval = true\n                    this.forceUpdate()\n\n                }else{\n                    this.emailmess=null;\n                    this.forceUpdate()\n                }\n\n            }else if (emailtaken.out === true){ // if email is taken\n                this.emailmess='Email taken';\n                this.forceUpdate()\n\n            }\n\n        }\n\n\n        if (event.target.name === 'username'){\n            const usernametaken = await this.credtaken('username',this.state.username)\n            //console.log(this.usernamemess)\n            //console.log(usernametaken)\n\n            if (usernametaken.out === true){ // show username is taken\n\n                this.usernamemess = 'Username is taken' \n                this.forceUpdate()\n\n            }else if (usernametaken.out === false){ // show username is not taken\n\n                this.usernamemess = 'Username is valid'\n                this.forceUpdate() \n\n            }\n        }\n    };\n\n    async function regiproc(event){\n        //console.log('calling regipro')\n        if (this.emailval === true && this.usernamevall === true){\n            const streg = await Axios.post('/register' ,{fnm:this.state.firstname,surn:this.state.surname,email:this.state.email ,usrnm:this.state.username,password:this.state.password,pnum:this.state.phonenumber},(err , datas)=>{return datas})\n            console.log(streg.data)\n\n        }\n    };\n\n    return(\n        <div class='logbackground'>\n            <div class='maincontainer'> \n                <div class = 'Form_schem'>\n                    \n                    <span><h1>Create an account</h1></span>\n                    <span>\n                        <label for='first_name'>Firstname</label>\n                        <input id ='first_name' placeholder='Forename' type='text' value = {this.state.firstname} onChange = { this.handleChange} name = 'firstname' required/>\n                    </span>\n                    <span>\n                        <label for='sur_name'>Surname</label>\n                        <input id ='sur_name' placeholder='Surname'type='text' value = {this.state.surname} onChange = { this.handleChange} name = 'surname' required/>\n                    </span>\n                    <span>\n                        <label for='Username'>Username</label>\n                        <input id = 'Username' value = {this.state.username} type='text' placeholder = 'Username' onChange = {this.handleChange} name = 'username' required/>\n                        <p1>{this.usernamemess}</p1>\n                    </span>\n                    <span> \n                        <label for='Password'>Password</label>\n                        <input id = 'Password' type='password' value = {this.state.password}  placeholder = 'Password' onChange = { this.handleChange} name = 'password' required/>\n                    </span>\n                    <span>\n                        <label for='email'>Email</label>\n                        <input id ='email' type = 'email' placeholder='Email' autoComplete='email'  value = {this.state.email} onChange = {this.handleChange} name ='email' maxLength = '320' required/>\n                        <p1 id='emailmess'>{this.emailmess}</p1>\n                    </span>\n                    <span>\n                        <label for='phonenumber'>Phonenumber</label>\n                        <input id ='phonenumber' placeholder='Phonenumber'type='text' value = {this.state.phonenumber} onChange = {this.handleChange} name = 'phonenumber'/>\n                    </span>\n        \n                    <span>\n                        <button type='submit' onClick={this.regiproc}>Register</button>    \n                    </span>\n                    <span id = 'tctxt'>\n                        <p1>By clicking Register you are agreeing to the <a href= '#'>Terms and Conditions</a></p1>\n                    </span>\n                    <span class = 'logbtn'>\n                        <span>Already have an account?<a href='/login'>Login</a></span>\n                    </span>\n                </div>\n            </div>\n        </div>\n\n\n    )\n\n\n}\nexport default Register"]},"metadata":{},"sourceType":"module"}